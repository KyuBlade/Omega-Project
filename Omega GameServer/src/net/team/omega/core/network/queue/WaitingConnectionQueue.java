package net.team.omega.core.network.queue;

import java.util.ArrayList;
import java.util.List;

import net.team.omega.core.network.serialization.data.Account;


public class WaitingConnectionQueue
{
    
    /**
     * Queue containing all {@link WaitingConnection}
     */
    private List<WaitingConnection> queue = new ArrayList<>();
    
    private static WaitingConnectionQueue instance;
    
    /**
     * Never call it
     */
    public WaitingConnectionQueue()
    {
	
    }
    
    public static WaitingConnectionQueue getInstance()
    {
	if(instance == null)
	    instance = new WaitingConnectionQueue();
	
	return instance;
    }
    
    /**
     * Add an account to the waiting queue.
     * The {@link WaitingConnection} contain the user {@link Account} and a key generated by the GameServer
     * 
     * @param wCon the {@link WaitingConnection} object to add
     */
    public void addToQueue(WaitingConnection wCon)
    {
	queue.add(wCon);
    }
    
    /**
     * Find the {@link WaitingConnection} bind to a key
     * 
     * @param key the key generated by the GameServer send to the client
     * @return the {@link WaitingConnection} corresponding to the key or null if none
     */
    public WaitingConnection getInQueue(String key)
    {
	for(WaitingConnection _wCon : queue)
	{
	    if(_wCon.getKey().equals(key))
		return _wCon;
	}
	
	return null;
    }
    
    /**
     * Find the {@link WaitingConnection} bind to an {@link Account}
     * 
     * @param account the {@link Account} who's created the {@link WaitingConnection}
     * @return the {@link WaitingConnection} corresponding to the {@link Account} or null if none
     */
    public WaitingConnection getInQueue(Account account)
    {
	for(WaitingConnection _wCon : queue)
	{
	    if(_wCon.getAccount().equals(account))
		return _wCon;
	}
	
	return null;
    }
    
    /**
     * Removing a {@link WaitingConnection} from the queue
     * @param wCon the {@link WaitingConnection} to remove from {@link WaitingConnectionQueue} queue
     */
    public void removeFromQueue(WaitingConnection wCon)
    {
	queue.remove(wCon);
    }
    
    /**
     * Clear the {@link WaitingConnectionQueue} queue
     */
    public void purgeQueue()
    {
	queue.clear();
    }
    
}
